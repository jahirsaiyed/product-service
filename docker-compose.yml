# This configuration is intended for development purpose, it's **your** responsibility to harden it for production
version: '3.8'
services:
  product-search:
    image: product-search:0.0.1-SNAPSHOT
    container_name: product-search
    ports: 
      - 6012:6012
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
      - SPRING_ELASTICSEARCH_REST_URIS=http://samplesearch-elasticsearch:9200
      - KAFKA_BOOTSTRAPSERVERS=kafka:9092
    depends_on:
      registry-service : 
        condition: service_started
      config-server:
        condition: service_started
    links:
      - registry-service
      - config-server
  registry-service:
    image: registry-service:0.0.1-SNAPSHOT
    container_name: registry-service
    ports: 
      - 8761:8761
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
  config-server:
    image: config-server:0.0.1-SNAPSHOT
    container_name: config-server
    ports: 
      - 8888:8888
    depends_on:
      - registry-service
    links:
      - registry-service
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs
  mongodb:
    image : mongo
    container_name: mongodb
    environment:
      - MONOGO_INITDB_DATABASE=product-service
      - MONOGO_INITDB_ROOT_USERNAME=root
      - MONOGO_INITDB_ROOT_PASSWORD=root
      - PUID=1000
      - PGID=1000
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro      
    ports:
    - 27017:27017
  mongo-express:
    image: mongo-express
    environment:
        - ME_CONFIG_MONGODB_SERVER=mongodb
        - ME_CONFIG_MONGODB_PORT=27017
        - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
        - ME_CONFIG_MONGODB_AUTH_DATABASE=admin
        - ME_CONFIG_MONGODB_AUTH_USERNAME=root
        - ME_CONFIG_MONGODB_AUTH_PASSWORD=root
        - ME_CONFIG_BASICAUTH_USERNAME=dev
        - ME_CONFIG_BASICAUTH_PASSWORD=dev
    depends_on:
        - mongodb
    ports:
      - 6081:8081
  samplesearch-elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - 'ES_JAVA_OPTS=-Xms1024m -Xmx1024m'
      - 'discovery.type=single-node'
  kafka:
    image: confluentinc/cp-kafka:5.5.3
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
  kibana:
    image: docker.elastic.co/kibana/kibana:7.10.0
    container_name: kibana
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://samplesearch-elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://samplesearch-elasticsearch:9200"]'
  zipkin:
    image: openzipkin/zipkin
    ports:
      - 9411:9411